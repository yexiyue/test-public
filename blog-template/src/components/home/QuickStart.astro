---
import { Code } from "astro:components";

type Props = {
  data: {
    title: string;
    description: string;
    code: string;
  }[];
};

const { data } = Astro.props;
const len = data.length;
---

<div id="cards" class="flex flex-col items-center">
  {
    data.map((item, i) => (
      <div
        class="sticky top-0 aspect-[4/3] md:aspect-video max-w-3xs sm:max-w-sm md:max-w-xl lg:max-w-3xl my-card-container"
        style={{
          "--index": i + 1,
          "--reverse-index": len - i,
          "--start-range": `calc(${i / len} * 100%)`,
          "--end-range": `calc(${(i + 1) / len} * 100%)`,
        }}
      >
        <div class="p-4 bg-base-100 overflow-hidden rounded-2xl border border-base-300 shadow aspect-[4/3] md:aspect-video max-w-3xs sm:max-w-sm md:max-w-xl lg:max-w-3xl my-card">
          <div class="flex h-full flex-col lg:flex-row gap-4 justify-center overflow-hidden">
            <div class="w-full lg:w-1/3 flex flex-col justify-center">
              <h1 class="text-xl font-bold">{item.title}</h1>
              <p class="py-6">{item.description}</p>
            </div>
            <div class="z-100  flex-1 flex flex-col justify-center text-sm overflow-auto">
              <Code
                class="p-2 rounded-lg h-full"
                code={item.code}
                lang="rust"
                theme="github-light-default"
              />
            </div>
          </div>
        </div>
      </div>
    ))
  }
</div>

<style>
  #cards {
    view-timeline-name: --cards-element-scrolls-in-body;
  }

  .my-card-container {
    padding-top: calc(var(--index) * 6rem);
  }

  @media (width>=48rem) {
    .my-card-container {
      padding-top: calc(var(--index) * 4rem);
    }
  }

  @supports (animation-timeline: view()) {
    #cards .my-card {
      animation: linear scale 3s forwards;
      animation-timeline: --cards-element-scrolls-in-body;
      animation-range: exit-crossing var(--start-range) exit-crossing
        var(--end-range);
    }

    @keyframes scale {
      to {
        transform: scale(calc(1.1 - calc(0.1 * var(--reverse-index))));
      }
    }
  }
</style>
